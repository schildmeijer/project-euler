#include <iostream>
#include <vector>

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// Find the sum of all the even-valued terms in the sequence which do not exceed one million.

using namespace std;

long fibonaci(vector<long> &fib, int nbr) {
	if (nbr >= 1000) {
		cout << "more than 1000 numbers" << endl;
		return -1;
	}
		
	fib[nbr] = fib[nbr-2] + fib[nbr-1];
	return fib[nbr];
}

int main (int argc, char * const argv[]) {
	vector<long> fib;
	fib.reserve(1000);
	fib[0] = 1;
	fib[1] = 1;
	fib[2] = 2;
	
	for (int i = 1; i != 20; ++i)
		cout << fibonaci(fib, i) << endl;
	
	long sum = 0;
	int i = 1;
	long fib_val = 0;
	do {
		fib_val = fibonaci(fib, i);
		if (fib_val % 2 == 0)
			sum += fib_val;
		++i;
	} while (fib_val <= 1000000);

	cout << "the sum is: " << sum << endl;
	
	return 0;
}
